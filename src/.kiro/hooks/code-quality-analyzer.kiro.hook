{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and provides automated code quality analysis with suggestions for improvements including code smells, design patterns, best practices, readability, maintainability, and performance optimizations. Focuses on keeping components small and breaking down long files.",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "app/**/*.js",
      "app/**/*.jsx",
      "app/**/*.ts",
      "app/**/*.tsx",
      "components/**/*.js",
      "components/**/*.jsx",
      "components/**/*.ts",
      "components/**/*.tsx",
      "hooks/**/*.js",
      "hooks/**/*.ts",
      "lib/**/*.js",
      "lib/**/*.ts",
      "services/**/*.js",
      "services/**/*.ts",
      "utils/**/*.js",
      "utils/**/*.ts",
      "stores/**/*.ts",
      "repositories/**/*.ts",
      "app/**/*.js"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code files for potential improvements. Focus on:\n\n1. **Code Smells & Anti-patterns**: Identify any code smells, duplicated code, or anti-patterns\n2. **Component Size**: Check if components/functions are doing too much work (should be 1-2 responsibilities max)\n3. **File Length**: If files are too long, suggest breaking them into smaller, focused modules\n4. **Design Patterns**: Recommend appropriate design patterns where beneficial\n5. **Best Practices**: Ensure adherence to React/JavaScript/TypeScript best practices\n6. **Readability**: Suggest improvements for code clarity and documentation\n7. **Maintainability**: Identify areas that could be harder to maintain or extend\n8. **Performance**: Spot potential performance issues and optimization opportunities\n\nFor each suggestion, provide:\n- Clear explanation of the issue\n- Specific recommendation for improvement\n- Example of how to implement the fix (when helpful)\n- Priority level (High/Medium/Low)\n\nKeep suggestions practical and focused on maintaining existing functionality while improving code quality."
  }
}